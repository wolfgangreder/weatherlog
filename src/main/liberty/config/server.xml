<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

  <!-- Enable features -->
  <featureManager>
    <feature>jakartaee-10.0</feature>
    <feature>microProfile-6.1</feature>
    <feature>restfulWS-3.1</feature>
    <feature>jsonp-2.1</feature>
    <feature>jsonb-3.0</feature>
    <feature>cdi-4.0</feature>
    <feature>mpConfig-3.1</feature>
    <feature>jdbc-4.3</feature>
    <feature>mpMetrics-5.1</feature>
    <feature>enterpriseBeansPersistentTimer-4.0</feature>
    <!--feature>mail-2.1</feature>
    <feature>enterpriseBeansLite-4.0</feature>
    <feature>eventLogging-1.0</feature-->
  </featureManager>
  <mpMetrics authentication="false"/>
  <transaction totalTranLifetimeTimeout="10m"/>
  <variable name="http.port" defaultValue="9080"/>
  <variable name="https.port" defaultValue="9444"/>
  <variable name="debug.port" defaultValue="7777"/>
  <variable name="firebird.host" defaultValue="localhost"/>
  <variable name="firebird.port" defaultValue="3050"/>
  <variable name="firebird.user" defaultValue="sysdba"/>
  <variable name="firebird.pass" defaultValue="masterkey"/>
  <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

  <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
  encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
  Then uncomment the keyStore element. -->
  <!--
  <keyStore password=""/> 
  -->

  <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
  basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
  generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
  Then uncomment the user element. -->
  <basicRegistry id="basic" realm="BasicRealm">
    <!--
    <user name="yourUserName" password="" />
    -->
  </basicRegistry>

  <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
  <httpEndpoint id="defaultHttpEndpoint"
                httpPort="${http.port}"
                host="*"/>

  <!-- Automatically expand WAR files and EAR files -->
  <applicationManager autoExpand="true"/>

  <!-- Configures the application on a specified context root -->
  <webApplication contextRoot="/" location="weatherlog.war" />
  <!-- Derby Library Configuration -->
  <library id="firebirdSQLJDBCLib">
    <fileset dir="${shared.resource.dir}/" includes="*.jar" />
  </library>
  <!-- Datasource Configuration -->
  <dataSource id="weatherdatasource" jndiName="jdbc/weather">
    <jdbcDriver libraryRef="firebirdSQLJDBCLib" 
                javax.sql.XADataSource="org.firebirdsql.ds.FBXADataSource"/>
    <connectionManager maxPoolSize="10" minPoolSize="2" maxIdleTime="5m"/>
    <properties charSet="UTF-8" database="${firebird.host}/${firebird.port}:weather" password="${firebird.pass}" userName="${firebird.user}"/>
  </dataSource>
  <dataSource id="timerDataSource" jndiName="jdbc/timerDataSource">
    <jdbcDriver libraryRef="firebirdSQLJDBCLib" 
                javax.sql.XADataSource="org.firebirdsql.ds.FBXADataSource"/>
    <connectionManager maxPoolSize="10" minPoolSize="2" maxIdleTime="5m"/>
    <properties charSet="UTF-8" database="${firebird.host}/${firebird.port}:weather" password="${firebird.pass}" userName="${firebird.user}"/>
  </dataSource>
  <databaseStore id="EJBTimerDatabaseStore" tablePrefix="EJBTimer_" dataSourceRef="timerDataSource" createTables="true"/>
  <persistentExecutor id="defaultEJBPersistentTimerExecutor"
                      taskStoreRef="EJBTimerDatabaseStore"/>  
  <ejbContainer>
    <timerService missedPersistentTimerAction="ONCE"/>
  </ejbContainer>
  <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
  <ssl id="defaultSSLConfig" trustDefaultCerts="true" />
</server>
